/* Generated by Yosys 0.38+92 (git sha1 84116c9a3, clang 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:12" *)
(* top =  1  *)
(* generator = "Amaranth" *)
module top(rst, clk);
  reg \$auto$verilog_backend.cc:2341:dump_module$1  = 0;
  wire [8:0] \$1 ;
  wire [8:0] \$2 ;
  wire [8:0] \$3 ;
  wire [8:0] \$4 ;
  reg [7:0] \$5 ;
  wire [7:0] \$6 ;
  wire [7:0] \$7 ;
  wire [7:0] \$8 ;
  (* src = "/home/bcheng/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:389" *)
  input clk;
  wire clk;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:15" *)
  wire clk_bufg_clk;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:15" *)
  wire clk_bufg_rst;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:14" *)
  wire clk_bufgctrl_clk;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:14" *)
  wire clk_bufgctrl_rst;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:13" *)
  wire clk_pll_clk;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:13" *)
  wire clk_pll_rst;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:21" *)
  reg [7:0] counter_bufg = 8'h00;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:20" *)
  reg [7:0] counter_bufgctrl = 8'h00;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:19" *)
  reg [7:0] counter_pll = 8'h00;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:18" *)
  reg [7:0] counter_sync = 8'h00;
  (* src = "/home/bcheng/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:389" *)
  input rst;
  wire rst;
  assign \$2  = { 1'h0, counter_pll } + (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:25" *) 9'h001;
  assign \$3  = { 1'h0, counter_bufgctrl } + (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:26" *) 9'h001;
  assign \$4  = { 1'h0, counter_bufg } + (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:27" *) 9'h001;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:18" *)
  always @(posedge clk)
    counter_sync <= \$5 ;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:19" *)
  always @(posedge clk_pll_clk)
    counter_pll <= \$6 ;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:20" *)
  always @(posedge clk_bufgctrl_clk)
    counter_bufgctrl <= \$7 ;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:21" *)
  always @(posedge clk_bufg_clk)
    counter_bufg <= \$8 ;
  assign \$1  = { 1'h0, counter_sync } + (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:24" *) 9'h001;
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:29" *)
  PLLE2_BASE #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT(32'd5),
    .CLKFBOUT_PHASE(0.0),
    .CLKIN1_PERIOD(10.0),
    .CLKOUT0_DIVIDE(32'd1),
    .CLKOUT0_DUTY_CYCLE(0.5),
    .CLKOUT0_PHASE(0.0),
    .DIVCLK_DIVIDE(32'd1),
    .REF_JITTER1(0.0),
    .STARTUP_WAIT("FALSE")
  ) \U$0  (
    .CLKFBIN(clk_pll_clk),
    .CLKIN1(clk),
    .CLKOUT0(clk_pll_clk),
    .PWRDWN(1'h0),
    .RST(1'h0)
  );
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:49" *)
  BUFGCTRL \U$1  (
    .CE0(1'h1),
    .I0(clk),
    .O(clk_bufgctrl_clk),
    .S0(1'h1)
  );
  (* src = "/home/bcheng/dev/amahdl/clock_gen/clock_gen.py:57" *)
  BUFG \U$2  (
    .I(clk),
    .O(clk_bufg_clk)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2341:dump_module$1 ) begin end
    \$5  = \$1 [7:0];
    if (rst) begin
      \$5  = 8'h00;
    end
  end
  assign clk_pll_rst = 1'h0;
  assign clk_bufgctrl_rst = 1'h0;
  assign clk_bufg_rst = 1'h0;
  assign \$8  = \$4 [7:0];
  assign \$7  = \$3 [7:0];
  assign \$6  = \$2 [7:0];
endmodule
